{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laila_mardene\\\\atl\\\\src\\\\Component\\\\FAQs.js\",\n  _s = $RefreshSig$();\nimport { Box, Accordion, AccordionSummary, AccordionDetails, Typography, Container } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport SwipeableViews from 'react-swipeable-views';\nimport Button from '@mui/material/Button';\nimport { useMediaQuery } from '@mui/material';\nimport prev from '../Media/Layer 2.png';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n_c = AutoPlaySwipeableViews;\nexport default function FAQs({\n  questions,\n  setQuestions\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [activeStep, setActiveStep] = useState(0);\n  const itemsPerColumn = 3;\n  const maxSteps = questions.length;\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n  const handleStepChange = step => {\n    setActiveStep(step);\n  };\n  const toggleQuestion = index => {\n    const newQuestions = [...questions];\n    newQuestions[index].isOpen = !newQuestions[index].isOpen;\n    setQuestions(newQuestions);\n  };\n  const displayCardsInRows = questions => {\n    const rows = [];\n    const totalRows = Math.ceil(questions.length / itemsPerRow);\n    for (let i = 0; i < totalRows; i++) {\n      const cardsForRow = questions.slice(i * itemsPerRow, (i + 1) * itemsPerRow);\n      const row = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: '50px',\n          marginBottom: '30px'\n        },\n        children: cardsForRow.map(q => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Accordion, {\n            sx: {\n              borderBottom: '2px solid #7D4896',\n              width: '60%',\n              marginLeft: '15%',\n              bgcolor: 'transparent',\n              '&:before': {\n                display: 'none'\n              },\n              borderBottom: '2px solid #7D4896',\n              padding: '30px',\n              boxShadow: 'none',\n              '&:last-child': {\n                borderBottom: '2px solid #7D4896',\n                width: '60%',\n                marginLeft: '15%',\n                borderRadius: '0px'\n              }\n            },\n            elevation: 0,\n            disableGutters: true,\n            expanded: q.isOpen,\n            onChange: () => toggleQuestion(index),\n            children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n              children: [q.isOpen ? /*#__PURE__*/_jsxDEV(RemoveIcon, {\n                sx: {\n                  color: '#7D4896',\n                  marginRight: '20px',\n                  marginTop: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 16\n              }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {\n                sx: {\n                  color: '#7D4896',\n                  marginRight: '20px',\n                  marginTop: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: '#7D4896',\n                  fontSize: '20px',\n                  fontWeight: 'bold'\n                },\n                children: q.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: '#7D4896',\n                  fontSize: '16px'\n                },\n                children: q.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 12\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 14\n          }, this)\n        }, void 0, false))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n      rows.push(row);\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"FAQs\",\n    sx: {\n      marginBottom: '30px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: '#F5C660',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingBottom: '60px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontWeight: 'bold',\n          fontSize: '30px',\n          color: '#7D4896',\n          marginBottom: '0px',\n          paddingTop: '40px'\n        },\n        children: t('FAQs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoPlaySwipeableViews, {\n        index: activeStep,\n        onChangeIndex: handleStepChange,\n        interval: 5000,\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: displayCardsInRows(questions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(FAQs, \"BvmKjh1H9ptxsiPuW/oNMt9uQFE=\", false, function () {\n  return [useTranslation];\n});\n_c2 = FAQs;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutoPlaySwipeableViews\");\n$RefreshReg$(_c2, \"FAQs\");","map":{"version":3,"names":["Box","Accordion","AccordionSummary","AccordionDetails","Typography","Container","React","useState","useTranslation","AddIcon","RemoveIcon","autoPlay","SwipeableViews","Button","useMediaQuery","prev","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AutoPlaySwipeableViews","_c","FAQs","questions","setQuestions","_s","t","activeStep","setActiveStep","itemsPerColumn","maxSteps","length","handleNext","prevActiveStep","handleBack","handleStepChange","step","toggleQuestion","index","newQuestions","isOpen","displayCardsInRows","rows","totalRows","Math","ceil","itemsPerRow","i","cardsForRow","slice","row","style","display","flexWrap","justifyContent","alignItems","gap","marginBottom","children","map","q","sx","borderBottom","width","marginLeft","bgcolor","padding","boxShadow","borderRadius","elevation","disableGutters","expanded","onChange","color","marginRight","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","question","answer","push","id","backgroundColor","paddingBottom","paddingTop","onChangeIndex","interval","flexDirection","_c2","$RefreshReg$"],"sources":["C:/Users/laila_mardene/atl/src/Component/FAQs.js"],"sourcesContent":["import { Box, Accordion, AccordionSummary, AccordionDetails, Typography, Container } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Button from '@mui/material/Button';\r\nimport {  useMediaQuery } from '@mui/material';\r\nimport prev from '../Media/Layer 2.png'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\nexport default function FAQs({questions,setQuestions}) {\r\n  const { t } = useTranslation();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const itemsPerColumn = 3 ;\r\n  const maxSteps = questions.length;\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const toggleQuestion = (index) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions[index].isOpen = !newQuestions[index].isOpen;\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n\r\n\r\n  const displayCardsInRows = (questions) => {\r\n    const rows = [];\r\n    const totalRows = Math.ceil(questions.length / itemsPerRow)\r\n\r\n    for (let i = 0; i < totalRows; i++) {\r\n      const cardsForRow = questions.slice(i * itemsPerRow, (i + 1) * itemsPerRow);\r\n\r\n      const row = (\r\n        <div\r\n          key={i}\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap:'wrap',\r\n            justifyContent: 'center',\r\n            alignItems:'center',\r\n            gap: '50px',\r\n            marginBottom: '30px',\r\n          }}\r\n        >\r\n          {cardsForRow.map((q) => (\r\n            <>\r\n             <Accordion\r\n            key={index}\r\n            sx={{\r\n              borderBottom: '2px solid #7D4896', width: '60%',marginLeft:'15%' ,bgcolor:'transparent',\r\n              '&:before': { display: 'none' },\r\n              borderBottom: '2px solid #7D4896',\r\n              padding: '30px',\r\n              boxShadow:'none',\r\n              '&:last-child': { borderBottom: '2px solid #7D4896', width: '60%',marginLeft:'15%', \r\n               borderRadius:'0px',\r\n            }\r\n            }}\r\n            elevation={0}\r\n            disableGutters\r\n            expanded={q.isOpen}\r\n            onChange={() => toggleQuestion(index)}\r\n          >\r\n          \r\n             <AccordionSummary>\r\n             {q.isOpen ? (\r\n               <RemoveIcon sx={{ color: '#7D4896', marginRight: '20px', marginTop: '5px' }} />\r\n             ) : (\r\n               <AddIcon sx={{ color: '#7D4896', marginRight: '20px', marginTop: '5px' }} />\r\n             )}\r\n             <Typography sx={{ color: '#7D4896', fontSize: '20px', fontWeight: 'bold' }}>\r\n               {q.question}\r\n             </Typography>\r\n           </AccordionSummary>\r\n           <AccordionDetails>\r\n             <Typography sx={{ color: '#7D4896', fontSize: '16px' }}>\r\n               {q.answer}\r\n             </Typography>\r\n           </AccordionDetails>\r\n           </Accordion></>\r\n          ))}\r\n        </div>\r\n      );\r\n\r\n      rows.push(row);\r\n    }\r\n\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <div id='FAQs' sx={{ marginBottom: '30px' }}>\r\n      <Box sx={{\r\n        backgroundColor: '#F5C660', width: '100%', justifyContent: 'center',\r\n        alignItems: 'center', paddingBottom: '60px'\r\n      }}>\r\n        <Typography sx={{\r\n          display: 'flex', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center',\r\n          fontWeight: 'bold', fontSize: '30px', color: '#7D4896', marginBottom: '0px',paddingTop:'40px'\r\n        }}>\r\n          {t('FAQs')}\r\n        </Typography>\r\n        <AutoPlaySwipeableViews\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        interval={5000}\r\n        style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\r\n      >\r\n        {displayCardsInRows(questions)}\r\n      </AutoPlaySwipeableViews>\r\n      </Box>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}