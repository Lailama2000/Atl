{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laila_mardene\\\\atl\\\\src\\\\Component\\\\FAQs.js\",\n  _s = $RefreshSig$();\nimport { Box, Accordion, AccordionSummary, AccordionDetails, Typography, Container } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FAQs() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [questions, setQuestions] = useState([{\n    \"Question\": \"What are the cars specifications\",\n    \"answer\": \"1)-Classic cars are cars for daily use and are considered the most widely used category in cities   2)-VIP cars are modern cars for use within cities or between governorates. They are comfortable, air-conditioned cars suitable for businessmen and special occasions 3)-VAN cars are a modern, air-conditioned car with a capacity of up to 11 passengers, suitable for companies, institutions, special events, and tourist trips 4)-Mini-VAN cars with a capacity of 7 passengers are used within cities and for transporting employees. It is considered the most economical category if the number of passengers is (5-7) passengers.\"\n  }, {\n    \"Question\": \"What types of cars are available\",\n    \"answer\": \"Classic – VIP – VAN – mini-VAN\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      marginBottom: '30px',\n      backgroundColor: '#F5C660',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        padding: '80px',\n        borderRadius: '20px',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontWeight: 'bold',\n          fontSize: '30px',\n          color: \"white\",\n          marginBottom: '20px'\n        },\n        children: t('Top Questions')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), questions.map(q => /*#__PURE__*/_jsxDEV(Accordion, {\n        sx: {\n          padding: '10px',\n          backgroundColor: 'transparent',\n          '&:before': {\n            display: 'none'\n          }\n        },\n        elevation: 0,\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(AddIcon, {\n            sx: {\n              color: '#7D4896'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 23\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: '#7D4896',\n              fontSize: '20px',\n              fontWeight: 'bold'\n            },\n            children: q.Question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: '#7D4896',\n              fontSize: '16px'\n            },\n            children: q.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(FAQs, \"mwed2KxhWivDS2N+LXUSRU7dCRQ=\", false, function () {\n  return [useTranslation];\n});\n_c = FAQs;\nvar _c;\n$RefreshReg$(_c, \"FAQs\");","map":{"version":3,"names":["Box","Accordion","AccordionSummary","AccordionDetails","Typography","Container","React","useState","useTranslation","AddIcon","jsxDEV","_jsxDEV","FAQs","_s","t","questions","setQuestions","sx","marginBottom","backgroundColor","width","children","padding","borderRadius","justifyContent","alignItems","display","flexWrap","fontWeight","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","map","q","elevation","disableGutters","expandIcon","Question","answer","_c","$RefreshReg$"],"sources":["C:/Users/laila_mardene/atl/src/Component/FAQs.js"],"sourcesContent":["import { Box,Accordion ,AccordionSummary ,AccordionDetails,Typography, Container  } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nexport default function FAQs() {\r\n  const { t  } = useTranslation();\r\n  const [questions,setQuestions] = useState([\r\n    {\r\n        \"Question\":\"What are the cars specifications\",\r\n        \"answer\":\"1)-Classic cars are cars for daily use and are considered the most widely used category in cities   2)-VIP cars are modern cars for use within cities or between governorates. They are comfortable, air-conditioned cars suitable for businessmen and special occasions 3)-VAN cars are a modern, air-conditioned car with a capacity of up to 11 passengers, suitable for companies, institutions, special events, and tourist trips 4)-Mini-VAN cars with a capacity of 7 passengers are used within cities and for transporting employees. It is considered the most economical category if the number of passengers is (5-7) passengers.\"  \r\n    } ,\r\n    {\r\n        \"Question\":\"What types of cars are available\",\r\n        \"answer\":\"Classic – VIP – VAN – mini-VAN\"\r\n        }\r\n] )\r\n  return (\r\n        <Container sx={{ marginBottom:'30px',backgroundColor:'#F5C660',width:'100%' }}>\r\n        <Box sx={{ \r\n        padding:'80px',borderRadius:'20px',justifyContent:'center'\r\n        ,alignItems:'center' }}>\r\n            <Typography sx={{display:'flex',flexWrap:'wrap',justifyContent:'center',alignItems:'center',fontWeight:'bold',fontSize:'30px',color:\"white\" ,marginBottom:'20px'}}>\r\n              {t('Top Questions')}\r\n              </Typography>\r\n          \r\n\r\n            {questions.map((q)=>\r\n        <Accordion sx={{ padding:'10px',backgroundColor:'transparent','&:before': {display: 'none'}}}\r\n         elevation={0} disableGutters>\r\n        <AccordionSummary\r\n          expandIcon={<AddIcon sx={{ color:'#7D4896' }} />}\r\n        >\r\n          <Typography sx={{ color:'#7D4896',fontSize:'20px',fontWeight:'bold' }}>\r\n            {q.Question}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography sx={{ color:'#7D4896',fontSize:'16px' }}>\r\n           {q.answer}\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>)}\r\n      </Box>\r\n        </Container>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}