{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laila_mardene\\\\atl\\\\src\\\\Component\\\\Sliders.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { Carousel } from 'react-responsive-carousel';\n// import 'react-responsive-carousel/lib/styles/carousel.min.css';\n// import { Button, Stack, Typography, useMediaQuery } from '@mui/material';\n\n// export default function Sliders({slider}) {\n//   const matches = useMediaQuery('(min-width:375px)');\n//   const lang = localStorage.getItem('lang')\n//   return (\n//     <div id='Home'>\n//     <Carousel \n//       onClickThumb={false}\n//       showStatus={false}\n//       autoPlay={true}\n//       renderIndicator={(onClickHandler, isSelected, index, label) => (\n//         <button\n//           type=\"button\"\n//           style={{\n//             border: 'none',\n//             width: '20px',\n//             height: '3px',\n//             background: isSelected ? '#018EA2' : '#018EA278',\n//             margin: '0 5px',\n//             cursor: 'pointer',\n//             transform: lang === 'ar' ? 'scaleX(-1)':'', \n//           }}\n//           onClick={onClickHandler}\n//         />\n//       )}\n//     >\n//       {slider.map((slider, index) => (\n//         <div key={index}>\n//           <Stack\n//             direction=\"row\"\n//             gap={20}\n//             sx={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center', padding: '20px' }}\n//           >\n//             <Stack sx={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'start', alignItems: 'start' }}>\n//               <Typography\n//                 sx={{\n//                   fontSize: '40px',\n//                   fontWeight: 'bold',\n//                   color: '#333134',\n//                   whiteSpace: 'pre-line',\n//                 }}\n//               >\n//                 {slider.title.split('\\n').map((line, lineIndex) => (\n//                   <React.Fragment key={lineIndex}>\n//                     {line}\n//                     <br />\n//                   </React.Fragment>\n//                 ))}\n//               </Typography>\n//               <Typography\n//                 sx={{ color: '#333134', fontSize: '15px', whiteSpace: 'pre-line' }}\n//               >\n//                 {slider.description.split('\\n').map((line, lineIndex) => (\n//                   <React.Fragment key={lineIndex}>\n//                     {line}\n//                     <br />\n//                   </React.Fragment>\n//                 ))}\n//               </Typography>\n//               <Button\n//               sx={{\n//                 bgcolor: '#018EA2',\n//                 color: 'white',\n//                 width: '200px',\n//                 marginTop: '20px',\n//                 textTransform: 'none',\n//                 fontSize: '15px',\n//                 '&:hover': { bgcolor: '#018EA2', color: 'white' },\n//               }}\n//               href={slider.action}\n//               target=\"_blank\"\n//             >\n//               {slider.button_text}\n//             </Button>\n//             </Stack>\n//             <img src={slider.image} style={{ objectFit: 'fill', width: matches ? '350px' : '300px', \n//             height: '350px',borderRadius:'20px' }} />\n//           </Stack>\n//         </div>\n//       ))}\n//     </Carousel>\n//     </div>\n//   );\n// }\n\nimport React from 'react';\nimport { Button, Stack, Typography, useMediaQuery } from '@mui/material';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport SwipeableViews from 'react-swipeable-views';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport image from '../Media/portrait-gorgeous-hispanic-preschool-teacher-teaching-her-students-classroom.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n_c = AutoPlaySwipeableViews;\nexport default function Sliders({\n  slider\n}) {\n  _s();\n  const matches = useMediaQuery('(min-width:375px)');\n  const lang = localStorage.getItem('lang');\n  return /*#__PURE__*/_jsxDEV(AutoPlaySwipeableViews, {\n    interval: 5000,\n    enableMouseEvents: true,\n    children: slider.map((slider, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        gap: 20,\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'start',\n            alignItems: 'start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: '40px',\n              fontWeight: 'bold',\n              color: '#333134',\n              whiteSpace: 'pre-line'\n            },\n            children: slider.title.split('\\n').map((line, lineIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)]\n            }, lineIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: '#333134',\n              fontSize: '15px',\n              whiteSpace: 'pre-line'\n            },\n            children: slider.description.split('\\n').map((line, lineIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this)]\n            }, lineIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              bgcolor: '#018EA2',\n              color: 'white',\n              width: '200px',\n              marginTop: '20px',\n              '&:hover': {\n                bgcolor: '#018EA2',\n                color: 'white'\n              }\n            },\n            href: slider.action,\n            children: slider.button_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slider.image,\n          style: {\n            objectFit: 'fill',\n            width: matches ? '350px' : '300px',\n            height: '350px',\n            borderRadius: '20px'\n          },\n          alt: \"Slider Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Sliders, \"Notg82ym9o1DByeCiLcTemAcsz0=\", false, function () {\n  return [useMediaQuery];\n});\n_c2 = Sliders;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutoPlaySwipeableViews\");\n$RefreshReg$(_c2, \"Sliders\");","map":{"version":3,"names":["React","Button","Stack","Typography","useMediaQuery","autoPlay","SwipeableViews","image","jsxDEV","_jsxDEV","AutoPlaySwipeableViews","_c","Sliders","slider","_s","matches","lang","localStorage","getItem","interval","enableMouseEvents","children","map","index","direction","gap","sx","display","flexWrap","justifyContent","alignItems","padding","fontSize","fontWeight","color","whiteSpace","title","split","line","lineIndex","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","description","bgcolor","width","marginTop","href","action","button_text","src","style","objectFit","height","borderRadius","alt","_c2","$RefreshReg$"],"sources":["C:/Users/laila_mardene/atl/src/Component/Sliders.js"],"sourcesContent":["// import React from 'react';\r\n// import { Carousel } from 'react-responsive-carousel';\r\n// import 'react-responsive-carousel/lib/styles/carousel.min.css';\r\n// import { Button, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// export default function Sliders({slider}) {\r\n//   const matches = useMediaQuery('(min-width:375px)');\r\n//   const lang = localStorage.getItem('lang')\r\n//   return (\r\n//     <div id='Home'>\r\n//     <Carousel \r\n//       onClickThumb={false}\r\n//       showStatus={false}\r\n//       autoPlay={true}\r\n//       renderIndicator={(onClickHandler, isSelected, index, label) => (\r\n//         <button\r\n//           type=\"button\"\r\n//           style={{\r\n//             border: 'none',\r\n//             width: '20px',\r\n//             height: '3px',\r\n//             background: isSelected ? '#018EA2' : '#018EA278',\r\n//             margin: '0 5px',\r\n//             cursor: 'pointer',\r\n//             transform: lang === 'ar' ? 'scaleX(-1)':'', \r\n//           }}\r\n//           onClick={onClickHandler}\r\n//         />\r\n//       )}\r\n//     >\r\n//       {slider.map((slider, index) => (\r\n//         <div key={index}>\r\n//           <Stack\r\n//             direction=\"row\"\r\n//             gap={20}\r\n//             sx={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center', padding: '20px' }}\r\n//           >\r\n//             <Stack sx={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'start', alignItems: 'start' }}>\r\n//               <Typography\r\n//                 sx={{\r\n//                   fontSize: '40px',\r\n//                   fontWeight: 'bold',\r\n//                   color: '#333134',\r\n//                   whiteSpace: 'pre-line',\r\n//                 }}\r\n//               >\r\n//                 {slider.title.split('\\n').map((line, lineIndex) => (\r\n//                   <React.Fragment key={lineIndex}>\r\n//                     {line}\r\n//                     <br />\r\n//                   </React.Fragment>\r\n//                 ))}\r\n//               </Typography>\r\n//               <Typography\r\n//                 sx={{ color: '#333134', fontSize: '15px', whiteSpace: 'pre-line' }}\r\n//               >\r\n//                 {slider.description.split('\\n').map((line, lineIndex) => (\r\n//                   <React.Fragment key={lineIndex}>\r\n//                     {line}\r\n//                     <br />\r\n//                   </React.Fragment>\r\n//                 ))}\r\n//               </Typography>\r\n//               <Button\r\n//               sx={{\r\n//                 bgcolor: '#018EA2',\r\n//                 color: 'white',\r\n//                 width: '200px',\r\n//                 marginTop: '20px',\r\n//                 textTransform: 'none',\r\n//                 fontSize: '15px',\r\n//                 '&:hover': { bgcolor: '#018EA2', color: 'white' },\r\n//               }}\r\n//               href={slider.action}\r\n//               target=\"_blank\"\r\n//             >\r\n//               {slider.button_text}\r\n//             </Button>\r\n//             </Stack>\r\n//             <img src={slider.image} style={{ objectFit: 'fill', width: matches ? '350px' : '300px', \r\n//             height: '350px',borderRadius:'20px' }} />\r\n//           </Stack>\r\n//         </div>\r\n//       ))}\r\n//     </Carousel>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { Button, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport image from '../Media/portrait-gorgeous-hispanic-preschool-teacher-teaching-her-students-classroom.png';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nexport default function Sliders({ slider }) {\r\n  const matches = useMediaQuery('(min-width:375px)');\r\n  const lang = localStorage.getItem('lang');\r\n\r\n  return (\r\n    <AutoPlaySwipeableViews interval={5000} enableMouseEvents>\r\n      {slider.map((slider, index) => (\r\n        <div key={index}>\r\n          <Stack\r\n            direction=\"row\"\r\n            gap={20}\r\n            sx={{\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              padding: '20px',\r\n            }}\r\n          >\r\n            <Stack sx={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'start', alignItems: 'start' }}>\r\n              <Typography\r\n                sx={{\r\n                  fontSize: '40px',\r\n                  fontWeight: 'bold',\r\n                  color: '#333134',\r\n                  whiteSpace: 'pre-line',\r\n                }}\r\n              >\r\n                {slider.title.split('\\n').map((line, lineIndex) => (\r\n                  <React.Fragment key={lineIndex}>\r\n                    {line}\r\n                    <br />\r\n                  </React.Fragment>\r\n                ))}\r\n              </Typography>\r\n              <Typography sx={{ color: '#333134', fontSize: '15px', whiteSpace: 'pre-line' }}>\r\n                {slider.description.split('\\n').map((line, lineIndex) => (\r\n                  <React.Fragment key={lineIndex}>\r\n                    {line}\r\n                    <br />\r\n                  </React.Fragment>\r\n                ))}\r\n              </Typography>\r\n              <Button\r\n                sx={{\r\n                  bgcolor: '#018EA2',\r\n                  color: 'white',\r\n                  width: '200px',\r\n                  marginTop: '20px',\r\n                  '&:hover': { bgcolor: '#018EA2', color: 'white' },\r\n                }}\r\n                href={slider.action}\r\n              >\r\n                {slider.button_text}\r\n              </Button>\r\n            </Stack>\r\n            <img\r\n              src={slider.image}\r\n              style={{ objectFit: 'fill', width: matches ? '350px' : '300px', height: '350px', borderRadius: '20px' }}\r\n              alt=\"Slider Image\"\r\n            />\r\n          </Stack>\r\n        </div>\r\n      ))}\r\n    </AutoPlaySwipeableViews>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}