{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laila_mardene\\\\atl\\\\src\\\\Pages\\\\FormPage.js\",\n  _s = $RefreshSig$();\n// import pic from '../Media/young-tender-curly-girl-holding-documents.png'\n// import React, { useRef, useState } from 'react';\n// import Box from '@mui/material/Box';\n// import Stepper from '@mui/material/Stepper';\n// import Step from '@mui/material/Step';\n// import StepLabel from '@mui/material/StepLabel';\n// import Button from '@mui/material/Button';\n// import styled from '@emotion/styled';\n// import axios from 'axios';\n\n// const steps = ['Select campaign settings', '2', '3'];\n\n// export default function FormPage() {\n//     const [name, setName] = useState('');\n//     const [lastName, setLastName] = useState('');\n//     const [phone, setPhone] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [age, setAge] = useState('');\n//     const [recoveryEmail, setRecoveryEmail] = useState('');\n//     const [selectedGender, setselectedGender] = useState('');\n//     const [city_id,setCity_id]=useState(\"\")\n//     const [cities,setcities] = useState([])\n//     const [gender,setgender] = useState(['female','male'])\n//     const windowHeight = useRef(window.innerHeight);\n//     const [activeStep, setActiveStep] = React.useState(0);\n//     const [skipped, setSkipped] = React.useState(new Set());\n\n//     const [sendingImage, setSendingImage] = useState('');\n//     const [imagee, setImagee] = useState('');\n//     const [comment,setComment]=useState('')\n//     const [interest,setInterest]=useState('')\n\n//     const StyledStepIcon = styled.div`\n//       width: 30px;\n//       height: 30px;\n//       border-radius: 50%;\n//       color: white;\n//       background-color: ${props => props.active ? '#7D4896' : '#ccc'};\n//       display: flex;\n//       flex-wrap:wrap;\n//       align-items: center;\n//       justify-content: center;\n//     `;\n\n//     const isStepSkipped = (step) => {\n//       return skipped.has(step);\n//     };\n\n//     const handleNext = () => {\n//       let newSkipped = skipped;\n//       if (isStepSkipped(activeStep)) {\n//         newSkipped = new Set(newSkipped.values());\n//         newSkipped.delete(activeStep);\n//       }\n//       setActiveStep((prevActiveStep) => prevActiveStep + 1);\n//       setSkipped(newSkipped);\n//     };\n\n//     const handleBack = () => {\n//       setActiveStep((prevActiveStep) => prevActiveStep - 1);\n//     };\n\n//     const handleFinish =() =>{\n//     //   const formData = new FormData();\n//     //   formData.append('firstname', name);\n//     //   formData.append('lastname', lastName);\n//     //   formData.append('age', age);\n//     //   formData.append('gender', gender);\n//     //   formData.append('email', recoveryEmail);\n//     //   formData.append('phone', phone);\n//     //   formData.append('password', password);\n//     //   formData.append('avatar', name);\n//     //   formData.append('nationality', city_id);\n//     //   formData.append('interests', interest);\n//     //   for (var pair of formData.entries()) {\n//     //     console.log(pair[0]+ ', ' + pair[1]); \n//     // }\n//     // axios.post(`${process.env.REACT_APP_API_URL}register`,formData).then(res=>{\n//     //   console.log(res.data)\n//     // })\n//     }\n//   return (\n//     <div style={{marginTop:'90px'}}>\n//       <img src={pic} style={{width:'100%',height:'500px',objectFit:'cover'}}/>\n//       <div style={{ width: '100%',\n//      alignItems: 'start', justifyContent: 'center', \n//      display: 'flex'}}>\n//       <Box sx={{ width: '40%' ,padding:\"40px\"}}>\n//         <Stepper activeStep={activeStep}>\n//           {steps.map((label, index) => {\n//             const labelProps = {};\n//             return (\n//               <Step key={label}>\n//                 <StepLabel StepIconComponent={StyledStepIcon} {...labelProps} sx={{ \n//                     position:'relative'\n//                  }}>\n//                     <div style={{ position:\"absolute\", right:\"18px\", bottom:'3px',fontWeight:\"bold\"\n//                     ,color:\"white\",fontSize:\"16px\" }}>\n//                   {label}\n//                   </div>\n//                 </StepLabel>\n//               </Step>\n//             );\n//           })}\n//         </Stepper>\n//         {activeStep === steps.length ? (\n//           <div>hello</div>\n//         ) : (\n//           <React.Fragment>\n//               {activeStep === 0 && (\n//                 <div style={{ padding:'20px' }}>\n//                hi\n//                 </div>\n//             )}\n//               {activeStep === 1 && (\n//                 <div>\n//                 hi\n//                 </div>\n//             )}\n//                {activeStep === 2 && (\n//                 'hhh'\n//             )}\n//             <Box sx={{ display: 'flex', flexDirection: 'row' }}>\n//               <Button\n//                 color=\"inherit\"\n//                 disabled={activeStep === 0}\n//                 onClick={handleBack}\n//                 sx={{ mr: 1, color:'#DD560A' }}\n//               >\n//                 Back\n//               </Button>\n//               <Box sx={{ flex: '1 1 auto' }} />\n//              {activeStep !== steps.length - 1 ? \n//              <Button onClick={handleNext} sx={{ color:'#DD560A' }}>\n//                 Next\n//               </Button> : \n//               <Button onClick={handleFinish} sx={{ color:'#DD560A' }}>\n//                 Finish\n//               </Button>}\n//             </Box>\n//           </React.Fragment>\n//         )}\n//       </Box>\n//     </div>\n//     </div>\n//   )\n// }\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepButton from '@mui/material/StepButton';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Select campaign settings', 'Create an ad group', 'Create an ad'];\nexport default function HorizontalNonLinearStepper() {\n  _s();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const totalSteps = () => {\n    return steps.length;\n  };\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ?\n    // It's the last step, but not all steps have been completed,\n    // find the first step that has been completed\n    steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      nonLinear: true,\n      activeStep: activeStep,\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        completed: completed[index],\n        children: /*#__PURE__*/_jsxDEV(StepButton, {\n          color: \"inherit\",\n          onClick: handleStep(index),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: allStepsCompleted() ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            mb: 1\n          },\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'row',\n            pt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: '1 1 auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            mb: 1,\n            py: 1\n          },\n          children: [\"Step \", activeStep + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'row',\n            pt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            sx: {\n              mr: 1\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: '1 1 auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleNext,\n            sx: {\n              mr: 1\n            },\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), activeStep !== steps.length && (completed[activeStep] ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              display: 'inline-block'\n            },\n            children: [\"Step \", activeStep + 1, \" already completed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleComplete,\n            children: completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(HorizontalNonLinearStepper, \"ScfQtMjocTEEPsQJA4wuJiaPwNA=\");\n_c = HorizontalNonLinearStepper;\nvar _c;\n$RefreshReg$(_c, \"HorizontalNonLinearStepper\");","map":{"version":3,"names":["React","Box","Stepper","Step","StepButton","Button","Typography","jsxDEV","_jsxDEV","steps","HorizontalNonLinearStepper","_s","activeStep","setActiveStep","useState","completed","setCompleted","totalSteps","length","completedSteps","Object","keys","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","step","i","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","handleReset","sx","width","children","nonLinear","map","label","index","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","mt","mb","display","flexDirection","pt","flex","py","disabled","mr","variant","_c","$RefreshReg$"],"sources":["C:/Users/laila_mardene/atl/src/Pages/FormPage.js"],"sourcesContent":["// import pic from '../Media/young-tender-curly-girl-holding-documents.png'\r\n// import React, { useRef, useState } from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import Stepper from '@mui/material/Stepper';\r\n// import Step from '@mui/material/Step';\r\n// import StepLabel from '@mui/material/StepLabel';\r\n// import Button from '@mui/material/Button';\r\n// import styled from '@emotion/styled';\r\n// import axios from 'axios';\r\n\r\n// const steps = ['Select campaign settings', '2', '3'];\r\n\r\n// export default function FormPage() {\r\n//     const [name, setName] = useState('');\r\n//     const [lastName, setLastName] = useState('');\r\n//     const [phone, setPhone] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [age, setAge] = useState('');\r\n//     const [recoveryEmail, setRecoveryEmail] = useState('');\r\n//     const [selectedGender, setselectedGender] = useState('');\r\n//     const [city_id,setCity_id]=useState(\"\")\r\n//     const [cities,setcities] = useState([])\r\n//     const [gender,setgender] = useState(['female','male'])\r\n//     const windowHeight = useRef(window.innerHeight);\r\n//     const [activeStep, setActiveStep] = React.useState(0);\r\n//     const [skipped, setSkipped] = React.useState(new Set());\r\n  \r\n//     const [sendingImage, setSendingImage] = useState('');\r\n//     const [imagee, setImagee] = useState('');\r\n//     const [comment,setComment]=useState('')\r\n//     const [interest,setInterest]=useState('')\r\n  \r\n//     const StyledStepIcon = styled.div`\r\n//       width: 30px;\r\n//       height: 30px;\r\n//       border-radius: 50%;\r\n//       color: white;\r\n//       background-color: ${props => props.active ? '#7D4896' : '#ccc'};\r\n//       display: flex;\r\n//       flex-wrap:wrap;\r\n//       align-items: center;\r\n//       justify-content: center;\r\n//     `;\r\n  \r\n  \r\n//     const isStepSkipped = (step) => {\r\n//       return skipped.has(step);\r\n//     };\r\n  \r\n//     const handleNext = () => {\r\n//       let newSkipped = skipped;\r\n//       if (isStepSkipped(activeStep)) {\r\n//         newSkipped = new Set(newSkipped.values());\r\n//         newSkipped.delete(activeStep);\r\n//       }\r\n//       setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n//       setSkipped(newSkipped);\r\n//     };\r\n  \r\n//     const handleBack = () => {\r\n//       setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n//     };\r\n  \r\n//     const handleFinish =() =>{\r\n//     //   const formData = new FormData();\r\n//     //   formData.append('firstname', name);\r\n//     //   formData.append('lastname', lastName);\r\n//     //   formData.append('age', age);\r\n//     //   formData.append('gender', gender);\r\n//     //   formData.append('email', recoveryEmail);\r\n//     //   formData.append('phone', phone);\r\n//     //   formData.append('password', password);\r\n//     //   formData.append('avatar', name);\r\n//     //   formData.append('nationality', city_id);\r\n//     //   formData.append('interests', interest);\r\n//     //   for (var pair of formData.entries()) {\r\n//     //     console.log(pair[0]+ ', ' + pair[1]); \r\n//     // }\r\n//     // axios.post(`${process.env.REACT_APP_API_URL}register`,formData).then(res=>{\r\n//     //   console.log(res.data)\r\n//     // })\r\n//     }\r\n//   return (\r\n//     <div style={{marginTop:'90px'}}>\r\n//       <img src={pic} style={{width:'100%',height:'500px',objectFit:'cover'}}/>\r\n//       <div style={{ width: '100%',\r\n//      alignItems: 'start', justifyContent: 'center', \r\n//      display: 'flex'}}>\r\n//       <Box sx={{ width: '40%' ,padding:\"40px\"}}>\r\n//         <Stepper activeStep={activeStep}>\r\n//           {steps.map((label, index) => {\r\n//             const labelProps = {};\r\n//             return (\r\n//               <Step key={label}>\r\n//                 <StepLabel StepIconComponent={StyledStepIcon} {...labelProps} sx={{ \r\n//                     position:'relative'\r\n//                  }}>\r\n//                     <div style={{ position:\"absolute\", right:\"18px\", bottom:'3px',fontWeight:\"bold\"\r\n//                     ,color:\"white\",fontSize:\"16px\" }}>\r\n//                   {label}\r\n//                   </div>\r\n//                 </StepLabel>\r\n//               </Step>\r\n//             );\r\n//           })}\r\n//         </Stepper>\r\n//         {activeStep === steps.length ? (\r\n//           <div>hello</div>\r\n//         ) : (\r\n//           <React.Fragment>\r\n//               {activeStep === 0 && (\r\n//                 <div style={{ padding:'20px' }}>\r\n//                hi\r\n//                 </div>\r\n//             )}\r\n//               {activeStep === 1 && (\r\n//                 <div>\r\n//                 hi\r\n//                 </div>\r\n//             )}\r\n//                {activeStep === 2 && (\r\n//                 'hhh'\r\n//             )}\r\n//             <Box sx={{ display: 'flex', flexDirection: 'row' }}>\r\n//               <Button\r\n//                 color=\"inherit\"\r\n//                 disabled={activeStep === 0}\r\n//                 onClick={handleBack}\r\n//                 sx={{ mr: 1, color:'#DD560A' }}\r\n//               >\r\n//                 Back\r\n//               </Button>\r\n//               <Box sx={{ flex: '1 1 auto' }} />\r\n//              {activeStep !== steps.length - 1 ? \r\n//              <Button onClick={handleNext} sx={{ color:'#DD560A' }}>\r\n//                 Next\r\n//               </Button> : \r\n//               <Button onClick={handleFinish} sx={{ color:'#DD560A' }}>\r\n//                 Finish\r\n//               </Button>}\r\n//             </Box>\r\n//           </React.Fragment>\r\n//         )}\r\n//       </Box>\r\n//     </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepButton from '@mui/material/StepButton';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst steps = ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label} completed={completed[index]}>\r\n            <StepButton color=\"inherit\" onClick={handleStep(index)}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <React.Fragment>\r\n            <Typography sx={{ mt: 2, mb: 1 }}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n              <Box sx={{ flex: '1 1 auto' }} />\r\n              <Button onClick={handleReset}>Reset</Button>\r\n            </Box>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Typography sx={{ mt: 2, mb: 1, py: 1 }}>\r\n              Step {activeStep + 1}\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n              <Button\r\n                color=\"inherit\"\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Box sx={{ flex: '1 1 auto' }} />\r\n              <Button onClick={handleNext} sx={{ mr: 1 }}>\r\n                Next\r\n              </Button>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  <Typography variant=\"caption\" sx={{ display: 'inline-block' }}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1\r\n                      ? 'Finish'\r\n                      : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </Box>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </Box>\r\n  );\r\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAG,CAAC,0BAA0B,EAAE,oBAAoB,EAAE,cAAc,CAAC;AAEhF,eAAe,SAASC,0BAA0BA,CAAA,EAAG;EAAAC,EAAA;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}