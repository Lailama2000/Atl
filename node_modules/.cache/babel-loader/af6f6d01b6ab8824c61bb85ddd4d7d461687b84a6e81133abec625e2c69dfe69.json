{"ast":null,"code":"var _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n// import { autoPlay } from 'react-swipeable-views-utils';\n// import SwipeableViews from 'react-swipeable-views';\n// import Button from '@mui/material/Button';\n// import { Stack, Typography, useMediaQuery } from '@mui/material';\n// import { useTranslation } from 'react-i18next';\n// import prev from '../Media/Layer 2.png';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import SwipeableDrawer from '@mui/material/SwipeableDrawer';\n\n// const AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\n// export default function Blogs({ News }) {\n//   const matches = useMediaQuery('(min-width:1000px)');\n//   const [activeStep, setActiveStep] = useState(0);\n//   const itemsPerPage = matches ? 3 : 1 ;\n//   const maxSteps = Math.ceil(News.length / 3);\n//   const { t } = useTranslation();\n//   const navigate = useNavigate();\n\n//  const handleNext = () => {\n//   setActiveStep((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n// };\n\n// const handleBack = () => {\n//   setActiveStep((prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps);\n// };\n\n//   const handleStepChange = (step) => {\n//     setActiveStep(step);\n//   };\n\n//   const handleBlog = (id) => {\n//     console.log(id);\n//     axios.get(`${process.env.REACT_APP_API_URL}blog-details/${id}`).then((res) => {\n//       navigate('/blogDetails', { state: { data: res.data.data } });\n//     });\n//   };\n\n//   const displayCardsInRows = (cards) => {\n//     const startIndex = activeStep % cards.length;\n//     const rowCards = [\n//       ...cards.slice(0, startIndex +itemsPerPage),\n//     ];\n\n//     const row = (\n//       <div\n//         style={{\n//           display: 'flex',\n//           flexWrap: 'wrap',\n//           justifyContent: 'center',\n//           alignItems: 'center',\n//           gap: '50px',\n//           marginBottom: '30px',\n//         }}\n//       >\n//         {rowCards.map((c) => (\n//           <Card key={c.id} sx={{ width: '300px', borderRadius: '10px', minHeight: '450px' }}>\n//             <CardContent\n//               sx={{\n//                 padding: matches ? '30px' : '30px',\n//                 display: 'flex',\n//                 flexWrap: 'wrap',\n//                 justifyContent: 'start',\n//                 alignItems: 'start',\n//                 position: 'relative',\n//               }}\n//             >\n//                 <Stack>\n//                   <img\n//                     src={c.image}\n//                     style={{\n//                       borderRadius: '10px',\n//                       width: '240px',\n//                       height: '200px',\n//                       objectFit: 'fill',\n//                     }}\n//                   />\n//                   {/* <div\n//                     style={{\n//                       position: 'absolute',\n//                       bottom: '150px',\n//                       width: '230px',\n//                       left: matches ? '10%' : '10%',\n//                       height: '40px',\n//                       backgroundImage:\n//                         'linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(255, 255, 255, 0))',\n//                       padding: '5px',\n//                       borderRadius: '10px',\n//                     }}\n//                   ></div> */}\n\n//                   <Typography\n//                     sx={{\n//                       color: '#018EA2',\n//                       fontSize: '13px',\n//                       fontWeight: 'bold',\n//                       marginTop: c.date ? '10px' : '25px',\n//                     }}\n//                   >\n//                     {c.date}\n//                   </Typography>\n//                   <Typography\n//                     sx={{\n//                       marginTop:'10px',\n//                       color: 'black',\n//                       fontSize: '16px',\n//                       padding: '5px',\n//                       minHeight:'100px'\n//                     }}\n//                   >\n//                     {c.title}\n//                   </Typography>\n//                   <Button\n//                     sx={{\n//                       bgcolor: '#7D4896',\n//                       color: 'white',\n//                       borderRadius: '5px',\n//                       '&:hover': {\n//                         bgcolor: '#7D4896',\n//                         color: 'white',\n//                       },\n//                       fontSize: '16px',\n//                       textTransform: 'none',\n//                     }}\n//                     onClick={() => {\n//                       handleBlog(c.id);\n//                     }}\n//                   >\n//                     {t('Read more')}\n//                   </Button>\n//                 </Stack>\n//               </CardContent>\n//             </Card>\n//           ))}\n//         </div>\n//      );\n\n//      return row;\n//    };\n\n//   return (\n//     <div style={{ backgroundColor: '#F1F1F1', padding: '20px' }}>\n//       <Typography sx={{\n//         fontWeight: 'bold', display: 'flex', flexWrap: 'wrap', justifyContent: 'center',\n//         alignItems: 'center', fontWeight: 'bold', fontSize: '30px', marginTop: '20px', color: \"#7D4896\", marginBottom: '20px'\n//       }}>\n//         {t('The ATL Blog')}\n//       </Typography>\n//       <AutoPlaySwipeableViews\n//        loop={true}\n//         interval={5000}\n//         index={activeStep}\n//         onChangeIndex={handleStepChange}\n//         style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n//       >\n//         {displayCardsInRows(News)}\n//       </AutoPlaySwipeableViews>\n//       {matches ?\n//         <div style={{\n//           display: 'flex', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center',\n//           position: 'relative'\n//         }}>\n//           <Button\n//             sx={{\n//               height: '30px', color: '#7D4896', position: 'absolute', bottom: '220px', left: '50px', cursor: 'pointer'\n//             }}\n//             onClick={handleNext}\n//             disabled={activeStep === maxSteps - 3}\n//           >\n//             <img src={prev} style={{ width: '30px', height: '30px', cursor: 'pointer' }} alt=\"Previous\" />\n//           </Button>\n//           <Button\n//             sx={{\n//               color: '#7D4896', height: '30px', position: 'absolute', bottom: '220px', right: '50px', cursor: 'pointer'\n//             }}\n//             onClick={handleBack}\n//             disabled={activeStep === 0}\n//           >\n//             <img src={prev} style={{ width: '30px', height: '30px', transform: 'scaleX(-1)', cursor: 'pointer' }} alt=\"Next\" />\n//           </Button>\n//         </div> : <></>}\n//     </div>\n//   );\n// }\n\nimport React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Blogs() {\n  _s();\n  const [autoplayInterval, setAutoplayInterval] = useState(null);\n  const sliderRef = useRef(null);\n  let isMouseDown = false;\n  let startX;\n  let scrollLeft;\n  const handleMouseDown = e => {\n    isMouseDown = true;\n    sliderRef.current.classList.add('active');\n    startX = e.pageX - sliderRef.current.offsetLeft;\n    scrollLeft = sliderRef.current.scrollLeft;\n  };\n  const handleMouseLeave = () => {\n    isMouseDown = false;\n    sliderRef.current.classList.remove('active');\n  };\n  const handleMouseUp = () => {\n    isMouseDown = false;\n    sliderRef.current.classList.remove('active');\n  };\n  const handleMouseMove = e => {\n    if (!isMouseDown) return;\n    e.preventDefault();\n    const x = e.pageX - sliderRef.current.offsetLeft;\n    const walk = (x - startX) * 2;\n    const maxScrollLeft = sliderRef.current.scrollWidth - sliderRef.current.clientWidth;\n    const newScrollLeft = Math.max(0, Math.min(scrollLeft - walk, maxScrollLeft));\n    sliderRef.current.scrollLeft = newScrollLeft;\n  };\n  const handleTouchStart = e => {\n    isMouseDown = true;\n    sliderRef.current.classList.add('active');\n    startX = e.touches[0].clientX - sliderRef.current.offsetLeft;\n    scrollLeft = sliderRef.current.scrollLeft;\n  };\n  const handleTouchEnd = () => {\n    isMouseDown = false;\n    sliderRef.current.classList.remove('active');\n  };\n  const handleTouchMove = e => {\n    if (!isMouseDown) return;\n    e.preventDefault();\n    const x = e.touches[0].clientX - sliderRef.current.offsetLeft;\n    const walk = (x - startX) * 2;\n    const maxScrollLeft = sliderRef.current.scrollWidth - sliderRef.current.clientWidth;\n    const newScrollLeft = Math.max(0, Math.min(scrollLeft - walk, maxScrollLeft));\n    sliderRef.current.scrollLeft = newScrollLeft;\n  };\n  const startAutoplay = () => {\n    setAutoplayInterval(setInterval(autoplaySlider, 100));\n  };\n  const stopAutoplay = () => {\n    clearInterval(autoplayInterval);\n    setAutoplayInterval(null);\n  };\n  const autoplaySlider = () => {\n    const maxScrollLeft = sliderRef.current.scrollWidth - sliderRef.current.clientWidth;\n    const currentScrollLeft = sliderRef.current.scrollLeft;\n    const newScrollLeft = currentScrollLeft + 1;\n    if (newScrollLeft >= maxScrollLeft) {\n      sliderRef.current.scrollLeft = 0;\n    } else {\n      sliderRef.current.scrollLeft = newScrollLeft;\n    }\n  };\n  useEffect(() => {\n    const slider = sliderRef.current;\n    slider.addEventListener('mousedown', handleMouseDown);\n    slider.addEventListener('mouseleave', handleMouseLeave);\n    slider.addEventListener('mouseup', handleMouseUp);\n    slider.addEventListener('mousemove', handleMouseMove);\n    slider.addEventListener('touchstart', handleTouchStart);\n    slider.addEventListener('touchend', handleTouchEnd);\n    slider.addEventListener('touchmove', handleTouchMove);\n    startAutoplay();\n    return () => {\n      slider.removeEventListener('mousedown', handleMouseDown);\n      slider.removeEventListener('mouseleave', handleMouseLeave);\n      slider.removeEventListener('mouseup', handleMouseUp);\n      slider.removeEventListener('mousemove', handleMouseMove);\n      slider.removeEventListener('touchstart', handleTouchStart);\n      slider.removeEventListener('touchend', handleTouchEnd);\n      slider.removeEventListener('touchmove', handleTouchMove);\n      stopAutoplay();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Blogs, \"W5cQbAFbRikrO5zRnBW6iy3If+w=\");\n_c = Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","Fragment","_Fragment","jsxDEV","_jsxDEV","Blogs","_s","autoplayInterval","setAutoplayInterval","useState","sliderRef","useRef","isMouseDown","startX","scrollLeft","handleMouseDown","e","current","classList","add","pageX","offsetLeft","handleMouseLeave","remove","handleMouseUp","handleMouseMove","preventDefault","x","walk","maxScrollLeft","scrollWidth","clientWidth","newScrollLeft","Math","max","min","handleTouchStart","touches","clientX","handleTouchEnd","handleTouchMove","startAutoplay","setInterval","autoplaySlider","stopAutoplay","clearInterval","currentScrollLeft","useEffect","slider","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["C:/Users/laila_mardene/atl/src/Component/Blogs.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Card from '@mui/material/Card';\r\n// import CardContent from '@mui/material/CardContent';\r\n// import { autoPlay } from 'react-swipeable-views-utils';\r\n// import SwipeableViews from 'react-swipeable-views';\r\n// import Button from '@mui/material/Button';\r\n// import { Stack, Typography, useMediaQuery } from '@mui/material';\r\n// import { useTranslation } from 'react-i18next';\r\n// import prev from '../Media/Layer 2.png';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\n\r\n// const AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\n// export default function Blogs({ News }) {\r\n//   const matches = useMediaQuery('(min-width:1000px)');\r\n//   const [activeStep, setActiveStep] = useState(0);\r\n//   const itemsPerPage = matches ? 3 : 1 ;\r\n//   const maxSteps = Math.ceil(News.length / 3);\r\n//   const { t } = useTranslation();\r\n//   const navigate = useNavigate();\r\n\r\n//  const handleNext = () => {\r\n//   setActiveStep((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\r\n// };\r\n\r\n// const handleBack = () => {\r\n//   setActiveStep((prevActiveStep) => (prevActiveStep - 1 + maxSteps) % maxSteps);\r\n// };\r\n\r\n//   const handleStepChange = (step) => {\r\n//     setActiveStep(step);\r\n//   };\r\n\r\n//   const handleBlog = (id) => {\r\n//     console.log(id);\r\n//     axios.get(`${process.env.REACT_APP_API_URL}blog-details/${id}`).then((res) => {\r\n//       navigate('/blogDetails', { state: { data: res.data.data } });\r\n//     });\r\n//   };\r\n\r\n//   const displayCardsInRows = (cards) => {\r\n//     const startIndex = activeStep % cards.length;\r\n//     const rowCards = [\r\n//       ...cards.slice(0, startIndex +itemsPerPage),\r\n//     ];\r\n  \r\n//     const row = (\r\n//       <div\r\n//         style={{\r\n//           display: 'flex',\r\n//           flexWrap: 'wrap',\r\n//           justifyContent: 'center',\r\n//           alignItems: 'center',\r\n//           gap: '50px',\r\n//           marginBottom: '30px',\r\n//         }}\r\n//       >\r\n//         {rowCards.map((c) => (\r\n//           <Card key={c.id} sx={{ width: '300px', borderRadius: '10px', minHeight: '450px' }}>\r\n//             <CardContent\r\n//               sx={{\r\n//                 padding: matches ? '30px' : '30px',\r\n//                 display: 'flex',\r\n//                 flexWrap: 'wrap',\r\n//                 justifyContent: 'start',\r\n//                 alignItems: 'start',\r\n//                 position: 'relative',\r\n//               }}\r\n//             >\r\n//                 <Stack>\r\n//                   <img\r\n//                     src={c.image}\r\n//                     style={{\r\n//                       borderRadius: '10px',\r\n//                       width: '240px',\r\n//                       height: '200px',\r\n//                       objectFit: 'fill',\r\n//                     }}\r\n//                   />\r\n//                   {/* <div\r\n//                     style={{\r\n//                       position: 'absolute',\r\n//                       bottom: '150px',\r\n//                       width: '230px',\r\n//                       left: matches ? '10%' : '10%',\r\n//                       height: '40px',\r\n//                       backgroundImage:\r\n//                         'linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(255, 255, 255, 0))',\r\n//                       padding: '5px',\r\n//                       borderRadius: '10px',\r\n//                     }}\r\n//                   ></div> */}\r\n                \r\n//                   <Typography\r\n//                     sx={{\r\n//                       color: '#018EA2',\r\n//                       fontSize: '13px',\r\n//                       fontWeight: 'bold',\r\n//                       marginTop: c.date ? '10px' : '25px',\r\n//                     }}\r\n//                   >\r\n//                     {c.date}\r\n//                   </Typography>\r\n//                   <Typography\r\n//                     sx={{\r\n//                       marginTop:'10px',\r\n//                       color: 'black',\r\n//                       fontSize: '16px',\r\n//                       padding: '5px',\r\n//                       minHeight:'100px'\r\n//                     }}\r\n//                   >\r\n//                     {c.title}\r\n//                   </Typography>\r\n//                   <Button\r\n//                     sx={{\r\n//                       bgcolor: '#7D4896',\r\n//                       color: 'white',\r\n//                       borderRadius: '5px',\r\n//                       '&:hover': {\r\n//                         bgcolor: '#7D4896',\r\n//                         color: 'white',\r\n//                       },\r\n//                       fontSize: '16px',\r\n//                       textTransform: 'none',\r\n//                     }}\r\n//                     onClick={() => {\r\n//                       handleBlog(c.id);\r\n//                     }}\r\n//                   >\r\n//                     {t('Read more')}\r\n//                   </Button>\r\n//                 </Stack>\r\n//               </CardContent>\r\n//             </Card>\r\n//           ))}\r\n//         </div>\r\n//      );\r\n\r\n//      return row;\r\n//    };\r\n\r\n//   return (\r\n//     <div style={{ backgroundColor: '#F1F1F1', padding: '20px' }}>\r\n//       <Typography sx={{\r\n//         fontWeight: 'bold', display: 'flex', flexWrap: 'wrap', justifyContent: 'center',\r\n//         alignItems: 'center', fontWeight: 'bold', fontSize: '30px', marginTop: '20px', color: \"#7D4896\", marginBottom: '20px'\r\n//       }}>\r\n//         {t('The ATL Blog')}\r\n//       </Typography>\r\n//       <AutoPlaySwipeableViews\r\n//        loop={true}\r\n//         interval={5000}\r\n//         index={activeStep}\r\n//         onChangeIndex={handleStepChange}\r\n//         style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\r\n//       >\r\n//         {displayCardsInRows(News)}\r\n//       </AutoPlaySwipeableViews>\r\n//       {matches ?\r\n//         <div style={{\r\n//           display: 'flex', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center',\r\n//           position: 'relative'\r\n//         }}>\r\n//           <Button\r\n//             sx={{\r\n//               height: '30px', color: '#7D4896', position: 'absolute', bottom: '220px', left: '50px', cursor: 'pointer'\r\n//             }}\r\n//             onClick={handleNext}\r\n//             disabled={activeStep === maxSteps - 3}\r\n//           >\r\n//             <img src={prev} style={{ width: '30px', height: '30px', cursor: 'pointer' }} alt=\"Previous\" />\r\n//           </Button>\r\n//           <Button\r\n//             sx={{\r\n//               color: '#7D4896', height: '30px', position: 'absolute', bottom: '220px', right: '50px', cursor: 'pointer'\r\n//             }}\r\n//             onClick={handleBack}\r\n//             disabled={activeStep === 0}\r\n//           >\r\n//             <img src={prev} style={{ width: '30px', height: '30px', transform: 'scaleX(-1)', cursor: 'pointer' }} alt=\"Next\" />\r\n//           </Button>\r\n//         </div> : <></>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\nimport React from 'react'\r\n\r\nexport default function Blogs() {\r\n\r\n   const [autoplayInterval, setAutoplayInterval] = useState(null);\r\n  const sliderRef = useRef(null);\r\n  let isMouseDown = false;\r\n  let startX;\r\n  let scrollLeft;\r\n\r\n  const handleMouseDown = (e) => {\r\n    isMouseDown = true;\r\n    sliderRef.current.classList.add('active');\r\n    startX = e.pageX - sliderRef.current.offsetLeft;\r\n    scrollLeft = sliderRef.current.scrollLeft;\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    isMouseDown = false;\r\n    sliderRef.current.classList.remove('active');\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isMouseDown = false;\r\n    sliderRef.current.classList.remove('active');\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isMouseDown) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - sliderRef.current.offsetLeft;\r\n    const walk = (x - startX) * 2;\r\n    const maxScrollLeft = sliderRef.current.scrollWidth - sliderRef.current.clientWidth;\r\n    const newScrollLeft = Math.max(0, Math.min(scrollLeft - walk, maxScrollLeft));\r\n    sliderRef.current.scrollLeft = newScrollLeft;\r\n  };\r\n\r\n  const handleTouchStart = (e) => {\r\n    isMouseDown = true;\r\n    sliderRef.current.classList.add('active');\r\n    startX = e.touches[0].clientX - sliderRef.current.offsetLeft;\r\n    scrollLeft = sliderRef.current.scrollLeft;\r\n  };\r\n\r\n  const handleTouchEnd = () => {\r\n    isMouseDown = false;\r\n    sliderRef.current.classList.remove('active');\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (!isMouseDown) return;\r\n    e.preventDefault();\r\n    const x = e.touches[0].clientX - sliderRef.current.offsetLeft;\r\n    const walk = (x - startX) * 2;\r\n    const maxScrollLeft = sliderRef.current.scrollWidth - sliderRef.current.clientWidth;\r\n    const newScrollLeft = Math.max(0, Math.min(scrollLeft - walk, maxScrollLeft));\r\n    sliderRef.current.scrollLeft = newScrollLeft;\r\n  };\r\n\r\n  const startAutoplay = () => {\r\n    setAutoplayInterval(setInterval(autoplaySlider, 100));\r\n  };\r\n\r\n  const stopAutoplay = () => {\r\n    clearInterval(autoplayInterval);\r\n    setAutoplayInterval(null);\r\n  };\r\n\r\n  const autoplaySlider = () => {\r\n    const maxScrollLeft = sliderRef.current.scrollWidth - sliderRef.current.clientWidth;\r\n    const currentScrollLeft = sliderRef.current.scrollLeft;\r\n    const newScrollLeft = currentScrollLeft + 1;\r\n    if (newScrollLeft >= maxScrollLeft) {\r\n      sliderRef.current.scrollLeft = 0;\r\n    } else {\r\n      sliderRef.current.scrollLeft = newScrollLeft;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const slider = sliderRef.current;\r\n\r\n    slider.addEventListener('mousedown', handleMouseDown);\r\n    slider.addEventListener('mouseleave', handleMouseLeave);\r\n    slider.addEventListener('mouseup', handleMouseUp);\r\n    slider.addEventListener('mousemove', handleMouseMove);\r\n\r\n    slider.addEventListener('touchstart', handleTouchStart);\r\n    slider.addEventListener('touchend', handleTouchEnd);\r\n    slider.addEventListener('touchmove', handleTouchMove);\r\n\r\n    startAutoplay();\r\n\r\n    return () => {\r\n      slider.removeEventListener('mousedown', handleMouseDown);\r\n      slider.removeEventListener('mouseleave', handleMouseLeave);\r\n      slider.removeEventListener('mouseup', handleMouseUp);\r\n      slider.removeEventListener('mousemove', handleMouseMove);\r\n\r\n      slider.removeEventListener('touchstart', handleTouchStart);\r\n      slider.removeEventListener('touchend', handleTouchEnd);\r\n      slider.removeEventListener('touchmove', handleTouchMove);\r\n\r\n      stopAutoplay();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n<></>\r\n  )\r\n}\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}