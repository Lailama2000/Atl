{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laila_mardene\\\\atl\\\\src\\\\Component\\\\FAQs.js\",\n  _s = $RefreshSig$();\nimport { Box, Accordion, AccordionSummary, AccordionDetails, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { virtualize } from 'react-swipeable-views-utils';\nimport SwipeableViews from 'react-swipeable-views';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VirtualizedSwipeableViews = virtualize(SwipeableViews);\n_c = VirtualizedSwipeableViews;\nexport default function FAQs() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [questions, setQuestions] = useState([{\n    Question: 'What are the cars specifications',\n    answer: '1)-Classic cars are cars for daily use and are considered the most widely used category in cities   2)-VIP cars are modern cars for use within cities or between governorates. They are comfortable, air-conditioned cars suitable for businessmen and special occasions 3)-VAN cars are a modern, air-conditioned car with a capacity of up to 11 passengers, suitable for companies, institutions, special events, and tourist trips 4)-Mini-VAN cars with a capacity of 7 passengers are used within cities and for transporting employees. It is considered the most economical category if the number of passengers is (5-7) passengers.',\n    isOpen: false\n  }, {\n    Question: 'What types of cars are available',\n    answer: 'Classic – VIP – VAN – mini-VAN',\n    isOpen: false\n  }, {\n    Question: 'What types of cars are available',\n    answer: 'Classic – VIP – VAN – mini-VAN',\n    isOpen: false\n  }\n  // Add more questions here\n  ]);\n  const toggleQuestion = index => {\n    const newQuestions = [...questions];\n    newQuestions[index].isOpen = !newQuestions[index].isOpen;\n    setQuestions(newQuestions);\n  };\n  const handleChangeIndex = index => {\n    // Handle the index change if needed\n  };\n  const questionsPerPage = 3;\n  const totalSlides = Math.ceil(questions.length / questionsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '30px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        backgroundColor: '#F5C660',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingBottom: '60px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontWeight: 'bold',\n          fontSize: '30px',\n          color: '#7D4896',\n          marginBottom: '20px',\n          paddingTop: '40px'\n        },\n        children: t('FAQs')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VirtualizedSwipeableViews, {\n        axis: \"x\",\n        index: 0,\n        onChangeIndex: handleChangeIndex,\n        slideRenderer: ({\n          key,\n          index\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(3, 1fr)'\n            },\n            children: questions.slice(index * questionsPerPage, (index + 1) * questionsPerPage).map((question, i) => /*#__PURE__*/_jsxDEV(Accordion, {\n              style: {\n                borderBottom: '2px solid #7D4896',\n                width: '100%',\n                marginLeft: '15%',\n                backgroundColor: 'transparent',\n                '&:before': {\n                  display: 'none'\n                },\n                padding: '30px',\n                '&:last-child': {\n                  borderBottom: '2px solid #7D4896',\n                  width: '60%',\n                  marginLeft: '15%'\n                }\n              },\n              elevation: 0,\n              disableGutters: true,\n              expanded: question.isOpen,\n              onChange: () => toggleQuestion(index * questionsPerPage + i),\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                children: [question.isOpen ? /*#__PURE__*/_jsxDEV(RemoveIcon, {\n                  style: {\n                    color: '#7D4896',\n                    marginRight: '20px',\n                    marginTop: '5px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {\n                  style: {\n                    color: '#7D4896',\n                    marginRight: '20px',\n                    marginTop: '5px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    color: '#7D4896',\n                    fontSize: '20px',\n                    fontWeight: 'bold'\n                  },\n                  children: question.Question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    color: '#7D4896',\n                    fontSize: '16px'\n                  },\n                  children: question.answer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(FAQs, \"KUe8b+9Pho0K7u2jH9r5xTYs1do=\", false, function () {\n  return [useTranslation];\n});\n_c2 = FAQs;\nvar _c, _c2;\n$RefreshReg$(_c, \"VirtualizedSwipeableViews\");\n$RefreshReg$(_c2, \"FAQs\");","map":{"version":3,"names":["Box","Accordion","AccordionSummary","AccordionDetails","Typography","React","useState","useTranslation","virtualize","SwipeableViews","AddIcon","RemoveIcon","jsxDEV","_jsxDEV","VirtualizedSwipeableViews","_c","FAQs","_s","t","questions","setQuestions","Question","answer","isOpen","toggleQuestion","index","newQuestions","handleChangeIndex","questionsPerPage","totalSlides","Math","ceil","length","style","marginBottom","children","backgroundColor","width","justifyContent","alignItems","paddingBottom","display","flexWrap","fontWeight","fontSize","color","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","axis","onChangeIndex","slideRenderer","key","gridTemplateColumns","slice","map","question","i","borderBottom","marginLeft","padding","elevation","disableGutters","expanded","onChange","marginRight","marginTop","_c2","$RefreshReg$"],"sources":["C:/Users/laila_mardene/atl/src/Component/FAQs.js"],"sourcesContent":["import { Box, Accordion, AccordionSummary, AccordionDetails, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { virtualize } from 'react-swipeable-views-utils';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\nconst VirtualizedSwipeableViews = virtualize(SwipeableViews);\r\n\r\nexport default function FAQs() {\r\n  const { t } = useTranslation();\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      Question: 'What are the cars specifications',\r\n      answer:\r\n        '1)-Classic cars are cars for daily use and are considered the most widely used category in cities   2)-VIP cars are modern cars for use within cities or between governorates. They are comfortable, air-conditioned cars suitable for businessmen and special occasions 3)-VAN cars are a modern, air-conditioned car with a capacity of up to 11 passengers, suitable for companies, institutions, special events, and tourist trips 4)-Mini-VAN cars with a capacity of 7 passengers are used within cities and for transporting employees. It is considered the most economical category if the number of passengers is (5-7) passengers.',\r\n      isOpen: false,\r\n    },\r\n    {\r\n      Question: 'What types of cars are available',\r\n      answer: 'Classic – VIP – VAN – mini-VAN',\r\n      isOpen: false,\r\n    },\r\n    {\r\n        Question: 'What types of cars are available',\r\n        answer: 'Classic – VIP – VAN – mini-VAN',\r\n        isOpen: false,\r\n      },\r\n    // Add more questions here\r\n  ]);\r\n\r\n  const toggleQuestion = (index) => {\r\n    const newQuestions = [...questions];\r\n    newQuestions[index].isOpen = !newQuestions[index].isOpen;\r\n    setQuestions(newQuestions);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    // Handle the index change if needed\r\n  };\r\n\r\n  const questionsPerPage = 3;\r\n  const totalSlides = Math.ceil(questions.length / questionsPerPage);\r\n\r\n  return (\r\n    <div style={{ marginBottom: '30px' }}>\r\n      <Box\r\n        style={{\r\n          backgroundColor: '#F5C660',\r\n          width: '100%',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          paddingBottom: '60px',\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            fontWeight: 'bold',\r\n            fontSize: '30px',\r\n            color: '#7D4896',\r\n            marginBottom: '20px',\r\n            paddingTop: '40px',\r\n          }}\r\n        >\r\n          {t('FAQs')}\r\n        </Typography>\r\n\r\n        <VirtualizedSwipeableViews\r\n          axis=\"x\"\r\n          index={0}\r\n          onChangeIndex={handleChangeIndex}\r\n          slideRenderer={({ key, index }) => (\r\n            <div key={key}>\r\n              <Box\r\n                style={{\r\n                  display: 'grid',\r\n                  gridTemplateColumns: 'repeat(3, 1fr)',\r\n                }}\r\n              >\r\n                {questions\r\n                  .slice(index * questionsPerPage, (index + 1) * questionsPerPage)\r\n                  .map((question, i) => (\r\n                    <Accordion\r\n                      key={i}\r\n                      style={{\r\n                        borderBottom: '2px solid #7D4896',\r\n                        width: '100%',\r\n                        marginLeft: '15%',\r\n                        backgroundColor: 'transparent',\r\n                        '&:before': { display: 'none' },\r\n                        padding: '30px',\r\n                        '&:last-child': {\r\n                          borderBottom: '2px solid #7D4896',\r\n                          width: '60%',\r\n                          marginLeft: '15%',\r\n                        },\r\n                      }}\r\n                      elevation={0}\r\n                      disableGutters\r\n                      expanded={question.isOpen}\r\n                      onChange={() => toggleQuestion(index * questionsPerPage + i)}\r\n                    >\r\n                      <AccordionSummary>\r\n                        {question.isOpen ? (\r\n                          <RemoveIcon\r\n                            style={{ color: '#7D4896', marginRight: '20px', marginTop: '5px' }}\r\n                          />\r\n                        ) : (\r\n                          <AddIcon\r\n                            style={{ color: '#7D4896', marginRight: '20px', marginTop: '5px' }}\r\n                          />\r\n                        )}\r\n                        <Typography\r\n                          style={{ color: '#7D4896', fontSize: '20px', fontWeight: 'bold' }}\r\n                        >\r\n                          {question.Question}\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <Typography style={{ color: '#7D4896', fontSize: '16px' }}>\r\n                          {question.answer}\r\n                        </Typography>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  ))}\r\n              </Box>\r\n            </div>\r\n          )}\r\n        />\r\n   </Box>\r\n   </div>\r\n  )}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}